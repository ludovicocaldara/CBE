function pge_version() {
        if [ -x $CBE_PGHOME/bin/psql ] ; then
                if [ "$1" == "-r" ] ; then
                        echo $($CBE_PGHOME/bin/psql --version | awk '{split($NF,a,"."); if (a[1]>=10) { print a[1]; } else { print a[1] "." a[2]} }'
)
                else
                        echo $($CBE_PGHOME/bin/psql --version | awk '{printf $NF}')
                fi
        else
                echo "not set"
                return 1
        fi
}

function F_pg_prompt () {
        CBE_PR_PSERR=$?
        F_colordef
	if [ ! $CBE_PGCLUSTER ] ; then
		PS1="\n# [ \u@\h:${CBE_COLCYN}$PWD${CBE_COLRST} [\\t] [${CBE_COLYLW}use ${CBE_COLUYLW}man pge${CBE_COLYLW} for help${CBE_COLRST}] \$( if [[ \$CBE_PR_PSERR -eq 0 ]]; then echo \"${CBE_COLUGRN}0${CBE_COLRST}\" ; else echo \"${CBE_COLURED}\$CBE_PR_PSERR${CBE_COLRST}\";fi) ] #\\n# "
	else
		PS1="\n# [ \u@\h:${CBE_COLCYN}$PWD${CBE_COLRST} [\\t] [${CBE_COLYLW}\$(pge_version) env:${CBE_COLUYLW}${CBE_PGCLUSTER:-\"not set\"}${CBE_COLRST}] \$( if [[ \$CBE_PR_PSERR -eq 0 ]]; then echo \"${CBE_COLUGRN}0${CBE_COLRST}\" ; else echo \"${CBE_COLURED}\$CBE_PR_PSERR${CBE_COLRST}\";fi) ] #\\n# "
	fi
}
 
function pquery() {
	if [ $# -eq 2 ] ; then
		#query and database
		$CBE_PGHOME/bin/psql -U $PGE_SUPER -q -t -A -c "$1" $2
	else
		#query only, default postgres
		$CBE_PGHOME/bin/psql -U $PGE_SUPER -q -t -A -c "$1" postgres
	fi
}

function pqueryfile() {
	if [ $# -eq 3 ] ; then
		#sql file, logfile and database
		$CBE_PGHOME/bin/psql -U $PGE_SUPER  -q --echo-all -f "$1" -L "$2" $3
	else
		#sql file only, default database postgres, default logfile dev null
		$CBE_PGHOME/bin/psql -U $PGE_SUPER  -q --echo-all -f "$1" -L "${2:-/dev/null}" postgres
	fi
}

db_list() {
	$CBE_PGHOME/bin/psql -U $PGE_SUPER -q -t -A -c "select datname from pg_database where not datistemplate;" postgres | grep -v ^$
}

pge_list () {
	if [ $1 ] ; then
		case $1 in
			-h) 
				echo "pge_list [-f|-n|-s|-y] (flat, sort_by_name, single, autostart. default flat)"
				;;
			-f) ## flat .. file as is without comments
				cat $CBE_PGTAB | grep -v '^$' | grep -v ^#
				;;
			-n) ## flat .. file as is without comments, sorted by name
				cat $CBE_PGTAB | grep -v '^$' | grep -v ^# | sort
				;;
			-s) ## single, just the instance names
				cat $CBE_PGTAB | grep -v '^$' | grep -v ^# | awk -F: '{print $1}'
				;;
			-y) ## only autostart=Y
				for inst in `cat $CBE_PGTAB | grep -v '^$' | grep -v ^#` ; do
					instname=`echo $inst | awk -F: '{print $1}'`
					autostart=`echo $inst | awk -F: '{print $3}'`
					if [ "$autostart" == "Y" ] ; then
						echo $instname
					fi
				done
				;;
			*)
				;;
		esac
	else
		cat $CBE_PGTAB | grep -v '^$' | grep -v ^#
	fi
}

pgenv () {
	CBE_PGENV=$1
	grep ^$CBE_PGENV: $CBE_PGTAB > /dev/null
	if [ $? -ne 0 ] ; then
		echo "Error: Environment $CBE_PGENV not found in $CBE_PGTAB."
		return 1
	fi
	CBE_PGCLUSTER=$CBE_PGENV
	export CBE_PGCLUSTER
	export CBE_PGHOME=`grep ^$CBE_PGENV: $CBE_PGTAB | awk -F: '{print $2}'`
	export CBE_PSQL=$CBE_PGHOME/bin/psql
	export CBE_PGAUTOSTART=`grep ^$CBE_PGENV: $CBE_PGTAB | awk -F: '{print $3}'`
	export PGPORT=`grep ^$CBE_PGENV: $CBE_PGTAB | awk -F: '{print $4}'`
	export PGDATA=`grep ^$CBE_PGENV: $CBE_PGTAB | awk -F: '{print $5}'`
	export CBE_PGXLOG=`grep ^$CBE_PGENV: $CBE_PGTAB | awk -F: '{print $6}'`
	export CBE_PGWAL=`grep ^$CBE_PGENV: $CBE_PGTAB | awk -F: '{print $6}'`
	export CBE_PGADMIN=${PGE_BASE}/admin/${CBE_PGCLUSTER}
	export PGOUTPUT=${CBE_PGADMIN}/log/${CBE_PGCLUSTER}.log
	export PGCONF=$PGDATA/postgresql.conf
	export CBE_PG_BACKUP_BASE=${PGE_BACKUP_COMMON}/${CBE_PGCLUSTER}
	export CBE_PG_BACKUP_DEST=${PGE_BACKUP_COMMON}/${CBE_PGCLUSTER}/backup
	export CBE_PG_DUMP_DEST=${PGE_BACKUP_COMMON}/${CBE_PGCLUSTER}/dump
	export CBE_PG_ARCHIVE_DEST=${PGE_BACKUP_COMMON}/${CBE_PGCLUSTER}/archive
	export CBE_PG_SAVED_ARCHIVE=${PGE_BACKUP_COMMON}/${CBE_PGCLUSTER}/archive_saved
	export LD_LIBRARY_PATH=$BASE_LD_LIBRARY_PATH:$CBE_PGHOME/lib/postgresql:$CBE_PGHOME/lib
	
	export PATH=$CBE_PGHOME/bin:$CBE_PG_BIN:$CUSTOM_PATH

	export MANPATH=$CBE_PGHOME/share/man:/usr/share/man:$CBE_PG_SCRIPT_BASE/man
}
